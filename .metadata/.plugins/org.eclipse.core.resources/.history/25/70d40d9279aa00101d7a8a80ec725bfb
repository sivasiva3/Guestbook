package com.liferay.docs.guestbook.portlet.portlet;

import com.liferay.docs.guestbook.model.Guestbook;
import com.liferay.docs.guestbook.portlet.constants.GuestbookPortletKeys;
import com.liferay.docs.guestbook.service.GuestbookEntryLocalService;
import com.liferay.docs.guestbook.service.GuestbookLocalService;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.Portlet;
import com.liferay.portal.kernel.portlet.bridges.mvc.MVCPortlet;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.ServiceContextFactory;
import com.liferay.portal.kernel.util.ParamUtil;

import java.util.logging.Level;
import java.util.logging.Logger;

import javax.portlet.ActionRequest;
import javax.portlet.ActionResponse;

import org.osgi.service.component.annotations.Component;
import org.osgi.service.component.annotations.Reference;

@Component(
		immediate=true,
		property= {
				"com.liferay.portlet.display-category=category.hidden",
				"com.liferay.portlet.scopeable=true",
				"com.liferay.portlet.display-name=Guestbooks",
				"com.liferay.expiration-cache=0",
				"javax.portlet.init-param.portlet-title-based-navigation=true",
				"javax.portlet.init-param.template-path=/",
				"javax.portlet.init-param.view-template=/guestbook_admin/view.jsp",
				"javax.portlet.name="+GuestbookPortletKeys.GUESTBOOK_ADMIN,
				"javax.portlet.resource-bundle=content.Language",
				"javax.portlet.security-role-ref=adminstrator",
				"javax.portlet.supports.mime-type=text/html",
				"com.liferay.portlet.add-default-resource=true"
			},
			service=Portlet.class
		)
public class GuestbookAdminPortlet extends MVCPortlet {
	public void addGuestbook(ActionRequest request,ActionResponse response)throws PortalException {
		ServiceContext service=ServiceContextFactory.getInstance(Guestbook.class.getName(), request);
		String name=ParamUtil.getString(request, "name");
		try {
			_guestbookLocalService.addGuestBook(service.getUserId(),name,service);
		}
		catch(PortalException e) {
			Logger.getLogger(GuestbookAdminPortlet.class.getName()).log(Level.SEVERE, null, e);
			response.setRenderParameter("mvcPath", "/guestbook_admin/edit_guestbook.jsp");
		}
	}
	public void updateGuestbook(ActionRequest request,ActionResponse response)throws PortalException {
		ServiceContext service=ServiceContextFactory.getInstance(Guestbook.class.getName(), request);
		String name=ParamUtil.getString(request, "name");
		long guestbookId=ParamUtil.getLong(request, "guestbookId");
		try {
			_guestbookLocalService.updateGuestbook(service.getUserId(), guestbookId, name, service);
		}
		catch(PortalException e) {
			Logger.getLogger(GuestbookAdminPortlet.class.getName()).log(Level.SEVERE, null, e);
			response.setRenderParameter("mvcPath", "/guestbook_admin/edit_guestbook.jsp");
		}
	}
	public void deleteGuestbook(ActionRequest request,ActionResponse response)throws PortalException {
		ServiceContext service=ServiceContextFactory.getInstance(Guestbook.class.getName(), request);
		long guestbookId=ParamUtil.getLong(request, "guestbookId");
		try {
			_guestbookLocalService.deleteGuestbook(guestbookId, service);
		}
		catch(PortalException e) {
			Logger.getLogger(GuestbookAdminPortlet.class.getName()).log(Level.SEVERE, null, e);
		}
	}
	 @Reference
	 private GuestbookLocalService _guestbookLocalService;
}












