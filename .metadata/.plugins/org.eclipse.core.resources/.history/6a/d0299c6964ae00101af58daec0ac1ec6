/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.docs.guestbook.service.impl;

import com.liferay.docs.guestbook.exception.GuestbookEntryEmailException;
import com.liferay.docs.guestbook.exception.GuestbookEntryMessageException;
import com.liferay.docs.guestbook.exception.GuestbookEntryNameException;
import com.liferay.docs.guestbook.model.GuestbookEntry;
import com.liferay.docs.guestbook.service.GuestbookEntryLocalService;
import com.liferay.docs.guestbook.service.base.GuestbookEntryLocalServiceBaseImpl;
import com.liferay.portal.aop.AopService;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.Validator;

import java.util.Date;
import java.util.UUID;

import org.osgi.service.component.annotations.Component;
import org.osgi.service.component.annotations.Reference;

/**
 * @author liferay
 */
@Component(
	property = "model.class.name=com.liferay.docs.guestbook.model.GuestbookEntry",
	service = AopService.class
)

public class GuestbookEntryLocalServiceImpl extends GuestbookEntryLocalServiceBaseImpl {
//	@Reference
//	 private GuestbookEntryLocalService _guestbookEntryLocalService;
	public GuestbookEntry addEntry(long userId,long guestbookId,String name,String email,String message,ServiceContext service) throws PortalException {
		long groupId = service.getScopeGroupId();
		User user=userLocalService.getUserById(userId);
		Date now=new Date();
		validate(name,email,message);
		long entryId=counterLocalService.increment();
		GuestbookEntry entry=guestbookEntryPersistence.create(entryId);
		entry.setUuid(UUID.randomUUID().toString());
		entry.setCreateDate(service.getCreateDate(now));
		entry.setModifiedDate(service.getModifiedDate(now));
		entry.setGuestbookId(guestbookId);
		entry.setName(name);
		entry.setEmail(email);
		entry.setMessage(message);
		entry.setUserId(userId);
		entry.setCompanyId(user.getCompanyId());
		entry.setUserName(user.getFullName());
		entry.setGroupId(groupId);
		entry.setExpandoBridgeAttributes(service);
		
		guestbookEntryPersistence.update(entry);
		System.out.println();
		return entry;
		
	}	
	protected void validate(String name,String email,String message)throws PortalException {
		if(Validator.isNull(message)) {
			throw new GuestbookEntryMessageException();
			}
		if(Validator.isNull(name)) {
			throw new GuestbookEntryNameException();
		}
		if(Validator.isNull(email)) {
			throw new GuestbookEntryEmailException();
		}
	}
	
	public GuestbookEntry updateGuestbookEntry(long entryId,long userId,long guestbookId,String name,String email,String message,ServiceContext service) throws PortalException{
		Date now =new Date();
		validate(name,email,message);
		GuestbookEntry entry=guestbookEntryPersistence.findByPrimaryKey(entryId);
		User user=userLocalService.getUserById(userId);
		
		entry.setUserId(userId);
		entry.setUserName(user.getFullName());
		entry.setModifiedDate(service.getCreateDate(now));
		entry.setName(name);
		entry.setEmail(email);
		entry.setMessage(message);
		entry.setExpandoBridgeAttributes(service);
		guestbookEntryPersistence.updateImpl(entry);
		return entry;
		
	}
	public GuestbookEntry deleteGuestbookEntry(GuestbookEntry entry){
		guestbookEntryPersistence.remove(entry);
		return entry;	
	}
	public GuestbookEntry deleteGuestbookEntry(long entryId) throws PortalException{
		GuestbookEntry entry=guestbookEntryPersistence.findByPrimaryKey(entryId);
		return deleteGuestbookEntry(entry);	
	}
}