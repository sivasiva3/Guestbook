package com.liferay.docs.guestbook.portlet.portlet;

import com.liferay.docs.guestbook.model.Guestbook;
import com.liferay.docs.guestbook.model.GuestbookEntry;
import com.liferay.docs.guestbook.portlet.constants.GuestbookPortletKeys;
import com.liferay.docs.guestbook.service.GuestbookEntryLocalService;
import com.liferay.docs.guestbook.service.GuestbookLocalService;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.portlet.bridges.mvc.MVCPortlet;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.ServiceContextFactory;
import com.liferay.portal.kernel.util.ParamUtil;
import com.liferay.portal.kernel.util.PortalUtil;

import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.portlet.ActionRequest;
import javax.portlet.ActionResponse;
import javax.portlet.Portlet;
import javax.portlet.PortletException;
import javax.portlet.RenderRequest;
import javax.portlet.RenderResponse;

import org.osgi.service.component.annotations.Component;
import org.osgi.service.component.annotations.Reference;

/**
 * @author KCDC 1
 */
@Component(
	immediate = true,
	property = {
		"com.liferay.portlet.display-category=category.sample",
		"com.liferay.portlet.header-portlet-css=/css/main.css",
		"com.liferay.portlet.instanceable=true",
		"javax.portlet.display-name=Guestbook",
		"javax.portlet.init-param.template-path=/",
		"javax.portlet.init-param.view-template=/guestbook/view.jsp",
		"javax.portlet.name=" + GuestbookPortletKeys.GUESTBOOK,
		"javax.portlet.resource-bundle=content.Language",
		"javax.portlet.security-role-ref=power-user,user"
	},
	service = Portlet.class
)
public class GuestbookPortlet extends MVCPortlet {
	@Reference
	private GuestbookEntryLocalService _guestbookEntryLocalService;
	@Reference
	private GuestbookLocalService _guestbookLocalService;
	
	public void addEntry(ActionRequest request, ActionResponse response) throws IOException,PortalException{
		ServiceContext service=ServiceContextFactory.getInstance(GuestbookEntry.class.getName(),request);
		String userName=ParamUtil.getString(request, "name");
		String email=ParamUtil.getString(request, "email");
		String message=ParamUtil.getString(request, "message");
		long guestbookId=ParamUtil.getLong(request, "guestbookId");
		long entryId=ParamUtil.getLong(request,"entryId");
		try {
			if (entryId > 0) {
	            // Update existing entry
	            _guestbookEntryLocalService.updateGuestbookEntry(entryId, service.getUserId(), guestbookId, userName, email, message, service);
	        } else {
	            //Add new entry
	            _guestbookEntryLocalService.addEntry(service.getUserId(), guestbookId, userName, email, message, service);
	        }

	        response.setRenderParameter("guestbookId", Long.toString(guestbookId));
		}
		catch(Exception e) {
				System.out.println(e);
				PortalUtil.copyRequestParameters(request, response);
				response.setRenderParameter("mvcPath", "/guestbook/edit_entry.jsp");
		}
			
	}
	public void deleteEntry(ActionRequest request,ActionResponse response) throws PortalException{
		long entryId=ParamUtil.getLong(request, "entryId");
		long guestbookId=ParamUtil.getLong(request, "guestbookId");
		
		ServiceContext service=ServiceContextFactory.getInstance(GuestbookEntry.class.getName(), request);
		try {
			response.setRenderParameter("guestbookId", Long.toString(guestbookId));
			_guestbookEntryLocalService.deleteGuestbookEntry(entryId);
		}
		catch(Exception e) {
			Logger.getLogger(GuestbookPortlet.class.getName()).log(Level.SEVERE,null,e);
		}
	}
	
	@Override
	public void render(RenderRequest request,RenderResponse response) throws IOException,PortletException {
		try {
			ServiceContext service=ServiceContextFactory.getInstance(Guestbook.class.getName(),request);
			long groupId=service.getScopeGroupId();
			long guestbookId=ParamUtil.getLong(request, "guestbookId");
			List<Guestbook> guestbooks=_guestbookLocalService.getGuestbooks(groupId);
			if(guestbooks.isEmpty()) {
				Guestbook guestbook=_guestbookLocalService.addGuestBook(service.getUserId(), "Main", service);
				guestbookId=guestbook.getGuestbookId();
			}
			if(guestbookId==0) {
				guestbookId=guestbooks.get(0).getGuestbookId();
			}
			request.setAttribute("guestbookId", guestbookId);
		}
		catch(Exception e) {
			throw new PortletException(e);
		}
		super.render(request, response);
	}
}
























